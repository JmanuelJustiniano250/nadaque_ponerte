<?php

namespace app\modules\admin\controllers;

use app\models\Contenido;
use app\models\ContenidoSearch;
use Yii;
use yii\filters\AccessControl;
use yii\helpers\FileHelper;
use yii\helpers\Json;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\web\UploadedFile;

/**
 * ContenidoController implements the CRUD actions for Contenido model.
 */
class ContenidoController extends Controller
{
    /**
     * @inheritdoc
     */

    public function behaviors()
    {
        return [
            /*'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],*/
            'access' => [
                'class' => AccessControl::className(),
                //'only'  => ['*'],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
        ];
    }

    public function init()
    {
        if (!empty(Yii::$app->user->identity)) {
            if (Yii::$app->user->identity->tipo != 5) {
                return $this->redirect(['/site/index']);
            }
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Contenido models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new ContenidoSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Creates a new Contenido model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Contenido();

        if ($model->load(Yii::$app->request->post())) {
            $model->fecha_modificacion = date('Y-m-d H:i:s');
            if ($model->save()) {
                return $this->redirect(['index']);
            }
        }
        return $this->render('create', [
            'model' => $model,
        ]);
    }

    /**
     * Updates an existing Contenido model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post())) {
            $model->fecha_modificacion = date('Y-m-d H:i:s');
            if ($model->save()) {
                return $this->redirect(['index']);
            }
        }
        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /* /**
      * Deletes an existing Contenido model.
      * If deletion is successful, the browser will be redirected to the 'index' page.
      * @param integer $id
      * @return mixed
      *
     public function actionDelete($id)
     {
         $this->findModel($id)->delete();

         return $this->redirect(['index']);
     }*/

    /**
     * Finds the Contenido model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Contenido the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Contenido::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }


    public function actionGaleria()
    {

        $galeria = FileHelper::findFiles('../imagen/contenido');
        $model = new Contenido();
        return $this->render('galeria', ['galeria' => $galeria, 'model' => $model]);
    }

    public function actionUpload()
    {
        $model = new Contenido();
        $model->file = UploadedFile::getInstance($model, 'file');
        $name = Yii::$app->security->generateRandomString();
        if ($model->upload($name)) {
            echo Json::encode([]);
            return $this->redirect(['galeria']);
        }
        var_dump($model->getErrors());
        return false;
    }

    public function actionErase()
    {
        $id = Yii::$app->request->post('key');
        $url = "/" . $id;
        $url = Yii::$app->basePath . $url;
        //$url=str_replace($model->archivo,'@web','@webroot');
        if (file_exists($url)) {
            if (unlink($url)) {
                return $this->redirect(['galeria']);
            }
        }
        return false;
    }
}
