<?php

namespace app\modules\admin\controllers;

use app\components\Funcions;
use app\models\Categoria;
use app\models\Ciudad;
use app\models\ColoresProductos;
use app\models\CondicionProducto;
use app\models\Filtros;
use app\models\FiltrosSearch;
use app\models\MarcaProducto;
use app\models\MaterialProducto;
use app\models\TallasProducto;
use Yii;
use yii\data\ActiveDataProvider;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\web\NotFoundHttpException;

/**
 * CategoriasController implements the CRUD actions for Categoria model.
 */
class FiltrosController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            /*'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],*/
            'access' => [
                'class' => AccessControl::className(),
                //'only'  => ['*'],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
        ];
    }

    public function init()
    {
        if (!empty(Yii::$app->user->identity)) {
            if (Yii::$app->user->identity->tipo != 5) {
                return $this->redirect(['/site/index']);
            }
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Categoria models.
     * @return mixed
     */
    public function actionIndex()
    {
        $tablas = array();
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => Ciudad::find()]),
            'titulo'=>'Ciudad',
            'model'=>new Ciudad(),
        ]);
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => ColoresProductos::find()]),
            'titulo'=>'Colores',
            'model'=>new ColoresProductos(),
        ]);
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => CondicionProducto::find()]),
            'titulo'=>'Condiciones',
            'model'=>new CondicionProducto(),
        ]);
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => MarcaProducto::find()]),
            'titulo'=>'Marcas',
            'model'=>new MarcaProducto(),
        ]);
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => MaterialProducto::find()]),
            'titulo'=>'Materiales',
            'model'=>new MaterialProducto(),
        ]);
        array_push($tablas, [
            'data'=>new ActiveDataProvider(['query' => TallasProducto::find()]),
            'titulo'=>'Tallas',
            'model'=>new TallasProducto(),
        ]);

        return $this->render('index', [
            'tablas' => $tablas,
        ]);
    }

    /**
     * Displays a single Categoria model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Categoria model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {

        $modelc = new Ciudad();
        $modelcp = new ColoresProductos();

        if ($modelc->load(Yii::$app->request->post())) {
            $modelc->save();
        }
        if ($modelcp->load(Yii::$app->request->post())) {
            $modelcp->save();
        }
        return $this->redirect(['index']);
    }

    /**
     * Updates an existing Categoria model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['index']);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Categoria model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $model = Yii::$app->request->get('model');
        if(!empty($model)){
            $item = $model::findOne($id);
            $item->delete();
        }



        return $this->redirect(['index']);
    }

    /**
     * Finds the Categoria model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Categoria the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Filtros::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    public function actionEstado($id)
    {
        if (!Yii::$app->request->isAjax)
            $this->redirect(['index']);
        Funcions::estado(Filtros::findOne($id));
    }

}
